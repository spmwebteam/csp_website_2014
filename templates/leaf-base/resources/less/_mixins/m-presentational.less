.remove-styles() {

    /* Mixins */
    .box-shadow-none();

    /* Display & Box Model */
    display: inline;
    width: auto;
    height: auto;
    margin: 0;
    padding: 0;
    border: none;

    /* Other */
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    text-shadow: none;
    background: none;
    outline: none;
}
.pseudo-clear() {
    content: "";
    width: 0;
    height: 0;
    margin: 0;
    padding: 0;
    display: block;
}
.hasLayout() {
    .lte7 & {
        display: inline;
        zoom: 1;
    }
}
.inline-block-fallback() {
    display: inline-block;

    // Mixins
    .hasLayout();
}
.hidden() {
    display: none !important;
    visibility: hidden;
}
.word-wrap() {
    -ms-word-break: break-all;
    word-break: break-all;
    word-break: break-word;
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    hyphens: auto;
}

// http://developer.yahoo.com/blogs/ydn/posts/2012/10/clip-your-hidden-content-for-better-accessibility/
.visually-hidden() { 
    width: 1px;
    height: 1px;
    padding: 0;
    position: absolute;
    clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
    clip: rect(1px, 1px, 1px, 1px);
    border: 0;
    overflow: hidden;
    
    &.focusable:active,
    &.focusable:focus {
        width: auto;
        height: auto;
        margin: 0;
        clip: auto;
        overflow: visible;
        position: static;
    }

    body:hover & {
        a,
        input,
        button {
            display: none;
        }
    }
}
.show-hidden() {
    width: auto;
    height: auto;
    margin: 0;
    position: relative;
    clip: auto;
    
    body:hover & {
        a,
        input,
        button {

            // Mixins
            .inline-block-fallback();
        }
    }
}

// Padding and Margin Mixins
.spacing-vertical(@type, @value, @text-size: @base-text-size) {
    @spacing-value: (1em * (@value / @text-size));

    @{type}-top: @spacing-value;
    @{type}-bottom: @spacing-value;
}

.spacing-horizontal(@type, @value, @text-size: @base-text-size) {    
    @spacing-value: (1em * (@value / @text-size));

    @{type}-left: @spacing-value;
    @{type}-right: @spacing-value;
}

.spacing-all(@type, @value, @text-size: @base-text-size) {    
    @spacing-value: (1em * (@value / @text-size));

    @{type}: @spacing-value; 
}

.spacing-shorthand(@type, @v-value: 5, @h-value: 5, @text-size: @base-text-size) {
   @v-spacing-value: (1em * (@v-value / @text-size));
   @h-spacing-value: (1em * (@h-value / @text-size));

    @{type}: @v-spacing-value @h-spacing-value;
}
